class Solution {
    int left,right;
    public int[] searchRange(int[] nums, int k) {
        left=right=-1;
        leftbinarySearch(nums,k,0,nums.length-1);
        rightbinarySearch(nums,k,0,nums.length-1);
        int arr[]=new int[2];
        arr[0]=left;    arr[1]=right;
        return arr;
    }
    public void leftbinarySearch(int[] nums,int k,int low,int high){
        while(low<=high){
            int mid=low+(high-low)/2;
            if(nums[mid]==k){
                left=mid;
                high=mid-1;
            }
            else if(nums[mid]<k){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
    }
    public void rightbinarySearch(int[] nums,int k,int low,int high){
        while(low<=high){
            int mid=low+(high-low)/2;
            if(nums[mid]==k){
                right=mid;
                low=mid+1;
            }
            else if(nums[mid]<k){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
    }
}
